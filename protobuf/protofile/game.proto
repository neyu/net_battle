syntax = "proto3";

package msgProto;

import "enum.proto";

message ChatReq 
{
	string content = 1;
}

message ChatAck
{
	string content = 1;
}

message TestAck
{
	string dummy = 1;
}

message ContentReq
{
    string msg = 1;
    int32 value = 2;
}

message ContentAck
{
	string msg = 1;
	int32 value = 2;
}

message ServerInfo
{
    string ip = 1;
    int32 port = 2;
}

message PingAck 
{
	//
}

message LoginReq 
{
    string version = 1;
	string platform = 2;
	string uid = 3;
}

message LoginAck 
{
	ResultCode result = 1;
	ServerInfo server = 2;
	string gameToken = 3;
	string gameSvcId = 4; // 选中的一台game服务器Id
}

message VerifyReq 
{
	string gameToken = 1;
	string gameSvcId = 2;
	int64 accountId = 3;
}

message VerifyAck 
{
	ResultCode result = 1;
}

// 创建用户
message UserCreate {
    string name = 1; 			// 名字
    int32 tempId = 2; 			// 模板id 
    int32 serverId = 4; 		// 服务器索引
    string shareKey = 5; 		// 可能的分红模块的分享key
}

message UserCreateResponse {
	int32 retCode = 1; 			// 状态码
}

// 验证常规登录,成功返回null
message GameEnter {
    int64 accId = 1; 			// 账号名
    string loginKey = 2; 		// 登录key
    int32 serverId = 3; 		// 服务器索引
}

message GameEnterResponse {
	int32 retCode = 1; 			// 状态码

	int64 userId = 2;
	string nickName = 3; 
	int32 tempId = 4;			// 头像,模板Id
	int64 coin = 5;
	int64 diamond = 6;
	int32 vip = 7;
	int32 vipScore = 8;
	int32 ticket = 9;			// 体力券
	int64 ticketReTime = 10;	// 上次体力券恢复时间
	string signName = 11; 		// 签名
	int32 honor = 12; 			// 荣耀值
	string sign = 13; 			// 签到数据
	int64 lastExitTime = 14; 	// 上次退出时间
}

// 获取服务器当前时间
message NetGetServerDate {
	//
}

// 验证常规登录,成功返回null
message AccountLogin {
    string account = 1; 	// 用户名
    string pwd = 2; 		// 密码
    int32 channelId = 3; 	// 渠道id
}

message LoginResponse {
	int32 retCode = 1; 			// 状态码

	int64 accId = 2; 			// 账号id
	string account = 3; 		// 账号名
	string deviceId = 4; 		// 机器码,设备唯一号
	int32 loginTimes = 5; 		// 登录次数	
	string loginKey = 6; 		// 登陆key
	string userServers = 7; 	// 拥有角色的服务器
	string sdkData = 8; 		// sdk数据
	string exData = 9; 			// 扩展数据
	string nickName = 10;		// 账号呢称
	string icon = 11;			// 账号头像
}

// 验证sdk平台登陆,成功返回null
// sdkData的数据说明：
// egret: [token,login_type]
message AccountLoginBySdk {
    string channelId = 1; 	// 渠道号id
    string sdkData = 2; 	// sdk的数据，是一个数组[]
    string deviceId = 3; 	// 机器码
}

// 注册账号
message AccountRegister {
    string account = 1; 	// 账号
    string pwd = 2; 		// 密码
    string deviceId = 3; 	// 机器码
    int32 channelId = 4; 	// 渠道号id
	string platform = 5; 	// 平台
}

// 获取所有服务器列表
message SvrListGet {
    bool isTest = 1; 	// 是否测试
}

// 获取服务器实例数据
message SvrInfoGet {
    int32 svrId = 1; 	// 服务器id
}

message PbSvrInfo {
	int32 id = 2; 				// 服务器索引id*/
	string name = 3; 			// 服务器名称 **/
	string area = 5; 			// 游戏区*/
	string host = 6; 			// 服务器ip*/
	string port = 7; 			// 端口*/
	int32 isNew = 8; 			// 是否是新区*/
	int32 status = 9; 			// 状态:0:维护,1:良好，2:正常，3:爆满 ,4:未开放*/
	int32 isClose = 14; 		// 是否维护 **/
	string closeExplain = 15; 	// 维护说明 **/
}
message SvrListResponse {
	int32 retCode = 1;
	int32 retType = 2; // 0:all 1:user
	repeated PbSvrInfo infos = 3;
}


// 获取服务器当前时间
message SvrDateGet {
	//
}

// 获取拥有角色的服务器
// @returns [ServerInfoEntity..]
message UserSvrsGet {
    int64 accId = 1; //账号id
}

// 获取账户服务器信息
message AccountSvrsGet {
    string openId = 1; //openId
    string appId = 2; //wanba
    bool isTest = 3; //1
}

// 测试网络延迟
message TestNetLatency {
	int64 time = 1; // 标记时间
}
// 同步操作信息
message ExchangeOptData {
	string optData = 1; // json data
}

// 角色信息
message PbHeroInfo {
	int64 id = 1;		// 英雄id
	int32 tempId = 2;	// 头像
	int32 level = 4;	// 等级
	int32 exp = 5;		// 经验
	int32 atk = 9;		// 攻
	int32 def = 10;		// 防
	int32 hp = 11;		// 血
	int32 mp = 12;		// 蓝
	int32 ap = 8;		// 体力
}

// 返回角色信息
message HeroInfo {
	repeated PbHeroInfo infos = 1; 
}

// 角色属性变更(number)
message SyncPropData {
	repeated Prop type = 1;
	repeated int64 val = 2; 
}

// 角色属性变更(string)
message SyncPropData2 {
	repeated Prop type = 1;
	repeated string val = 2; 
}

// 角色操作 
message SyncOptData {
	Opt type = 1;
	repeated int64 iVal = 2;
	repeated string strVal = 3;
}
